
package ru.ifmo.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SculptureWebService", targetNamespace = "http://service.ifmo.ru/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SculptureWebService {


    /**
     * 
     * @param material
     * @param year
     * @param author
     * @param name
     * @param width
     * @param height
     * @return
     *     returns int
     * @throws ru.ifmo.client.AuthException
     * @throws ru.ifmo.client.InsertingException
     * @throws InvalidCreatingParametersException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSculpture", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.CreateSculpture")
    @ResponseWrapper(localName = "createSculptureResponse", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.CreateSculptureResponse")
    public int createSculpture(
            @WebParam(name = "name", targetNamespace = "")
                    String name,
            @WebParam(name = "author", targetNamespace = "")
                    String author,
            @WebParam(name = "year", targetNamespace = "")
                    int year,
            @WebParam(name = "material", targetNamespace = "")
                    String material,
            @WebParam(name = "height", targetNamespace = "")
                    float height,
            @WebParam(name = "width", targetNamespace = "")
                    float width)
        throws ru.ifmo.client.AuthException, ru.ifmo.client.InsertingException, InvalidCreatingParametersException
    ;

    /**
     * 
     * @return
     *     returns java.util.List<ru.ifmo.client.Sculpture>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllSculptures", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.GetAllSculptures")
    @ResponseWrapper(localName = "getAllSculpturesResponse", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.GetAllSculpturesResponse")
    public List<ru.ifmo.client.Sculpture> getAllSculptures();

    /**
     * 
     * @param q
     * @return
     *     returns java.util.List<ru.ifmo.client.Sculpture>
     * @throws IllegalQException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSculptures", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.FindSculptures")
    @ResponseWrapper(localName = "findSculpturesResponse", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.FindSculpturesResponse")
    public List<ru.ifmo.client.Sculpture> findSculptures(
            @WebParam(name = "q", targetNamespace = "")
                    MyRequest q)
        throws IllegalQException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns int
     * @throws ru.ifmo.client.AuthException
     * @throws ru.ifmo.client.InvalidEntityException
     * @throws IllegalIdException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteSculpture", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.DeleteSculpture")
    @ResponseWrapper(localName = "deleteSculptureResponse", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.DeleteSculptureResponse")
    public int deleteSculpture(
            @WebParam(name = "id", targetNamespace = "")
                    int id)
        throws ru.ifmo.client.AuthException, IllegalIdException, ru.ifmo.client.InvalidEntityException
    ;

    /**
     * 
     * @param q
     * @param id
     * @return
     *     returns int
     * @throws ru.ifmo.client.AuthException
     * @throws ru.ifmo.client.InvalidEntityException
     * @throws IllegalQException
     * @throws IllegalIdException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateSculpture", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.UpdateSculpture")
    @ResponseWrapper(localName = "updateSculptureResponse", targetNamespace = "http://service.ifmo.ru/", className = "ru.ifmo.client.UpdateSculptureResponse")
    public int updateSculpture(
            @WebParam(name = "id", targetNamespace = "")
                    int id,
            @WebParam(name = "q", targetNamespace = "")
                    MyRequest q)
        throws ru.ifmo.client.AuthException, IllegalIdException, IllegalQException, ru.ifmo.client.InvalidEntityException
    ;

}
